{Application 'CENSUS_TRACKING' logic file }
PROC GLOBAL
file MEAPPP MEAPFF;
file PCCPPP PCCPFF;
numeric C;
numeric ok;
alpha op_id;
alpha (32) last_field;
alpha (40) folder;
alpha (40) csbatch,cstab,cssort;
alpha (80) execstr;

{ To keep user from stopping except through QUIT }
function OnStop();
  last_field = getsymbol();
  reenter last_field;
end;

function OnKey(X);
    if x in 114:116 then { F3, F4, F5 }
        { don't allow these keys to work, eat them }
        OnKey = 0;
    elseif x = 27 then { Use ESC to go back to the previous menu }
        if getsymbol() <> "CHOICE" then
            if getsymbol()[1:2] in "P1" then
                move to PCHOICE;
            elseif getsymbol()[1:2] in "P2" then
                move to PCHOICE;
            elseif getsymbol()[1:2] in "P3" then
                move to PCHOICE;
            elseif getsymbol() = "MCCHOICE" then
                move to RCHOICE;
            elseif getsymbol() = "FCCHOICE" then
                move to RCHOICE;
            elseif getsymbol() = "PCCHOICE" then
                move to RCHOICE;
            elseif getsymbol() = "MPHASE" then
                move to RCHOICE;
            endif;
		    move to CHOICE;
		endif;
		OnKey = 0;
    else
        OnKey = X;  { return rest of keys }
    endif;
end;

function CalcWeek(Y,M,D);    { Calculate Week Number }
    recode    Y : M  => C;
           2006 : 01 =>  0  + D;
           2006 : 02 => 31  + D;
           2006 : 03 => 59  + D;
           2006 : 04 => 90  + D;
           2006 : 05 => 120 + D;
           2006 : 06 => 151 + D;
           2006 : 07 => 181 + D;
           2006 : 08 => 212 + D;
           2006 : 09 => 243 + D;
           2006 : 10 => 273 + D;
           2006 : 11 => 304 + D;
           2006 : 12 => 334 + D;
           2007 : 01 => 365 + D;
    endrecode;
    CalcWeek = Int((C + 6) / 7);
end;

PROC CENSUS_TRACKING_FF
preproc
    folder  = "c:\census tracking\";
    csbatch = "c:\program files\cspro 6.0\csbatch.exe";
    cstab   = "c:\program files\cspro 6.0\cstab.exe";
    cssort  = "c:\program files\cspro 6.0\cssort.exe";
    op_id = strip(getoperatorid())[1:3];
    {
    if not op_id in "BMD", "GSF", "JEH" then
        errmsg("Invalid operator = %s",op_id);
        stop(1);
    endif;
    }
PROC CENSUS_TRACKING_QUEST
preproc
    { Get Today's Date as Posting Date and Today }
    PYEAR  = sysdate("YYYY");
    PMONTH = sysdate("MM");
    PDAY   = sysdate("DD");
    TODAY = PDATE;
PROC CHOICE
postproc
    { Main Menu Choices }
    if $ = "P" then
        skip to PCHOICE;
    elseif $ = "R" then
        skip to RCHOICE;
    elseif $ = "U" then
        skip to UCHOICE;
    elseif $ = "Q" then
        stop(1);
    endif;
    reenter;
    
PROC PCHOICE
onfocus
    { Protect Posting Date }
    set attributes (PDAY,PMONTH,PYEAR) protect;  
postproc
    { Posting Menu Choices }
    if $ = "A" then
        skip to P1PROV;
    elseif $ = "B" then
        skip to P2PROV;
    elseif $ = "C" then
        skip to P3PROV;
    elseif $ = "D" then
	    setfile(PCCPPP,concat(strip(folder),"Computer Counts.ppp"));
	    setfile(PCCPFF,concat(strip(folder),"Computer Counts.pff"),create);
	    filecopy(PCCPPP,PCCPFF);
	    open(PCCPFF,APPEND);
    	filewrite(PCCPFF,maketext("Parameter=%s",OP_ID));
	    close(PCCPFF); 
	    execstr = concat(strip(csbatch),' "',strip(folder));
        execsystem(concat(strip(execstr),'Computer Counts.bch"'));
    elseif $ = "S" then
        set attributes (PDAY,PMONTH,PYEAR) native;   
    elseif $ = "Q" then
        reenter CHOICE;
    else
        reenter;
    endif;

PROC PYEAR
postproc
    OK = 0;
    recode PMONTH : PDAY => OK;
                2 : 1-29 => 1;
         4,6,9,11 : 1-30 => 1;
                  : 1-31 => 1;
    endrecode;
    if PMONTH = 2 and PYEAR % 4 > 0 and PDAY = 29 then
        OK = 0;
    endif;
    if not OK then
        errmsg("ERROR - Incorrect Date - renter!");
        reenter PDAY;
    endif;
    if PDATE > TODAY then
        errmsg("ERROR - Posting Date > Today!");
        reenter PDAY;
    endif;
    reenter PCHOICE;
PROC P1EA
postproc
    EAPROV = P1PROV;
    EADIST = P1DIST;
    EALOC  = P1LOC;
    EAEA   = P1EA;
    OK = loadcase(EASTATUS_DICT, EAPROV, EADIST, EALOC, EAEA);
    if OK then
        if EAP1INIT <> "   " then
            errmsg("ERROR - This EA is marked Checked-in!");
            reenter P1EA;
        endif;
    else
        errmsg("ERROR - Can't find this EA in database!");
        reenter P1EA;
    endif;
    
PROC P1MALE
postproc
    if $ > P1PP then
        errmsg("ERROR - Males > Persons!");
        reenter;
    endif;

PROC P1FEM
postproc
    if $ > P1PP then
        errmsg("ERROR - Females > Persons!");
        reenter;
    elseif P1MALE + P1FEM <> P1PP then
        errmsg("ERROR - Males + Females not = Persons!");
        reenter P1PP;
    endif; 
    EAP1YEAR = visualvalue(PYEAR);
    EAP1MON  = visualvalue(PMONTH);
    EAP1DAY  = visualvalue(PDAY);
	EAP1WEEK = CalcWeek(EAP1YEAR, EAP1MON, EAP1DAY);
    EAP1INIT = op_id;
    EAMHH   = P1HH;
    EAMPP   = P1PP;
    EAMMALE = P1MALE;
    EAMFEM  = P1FEM;
    writecase(EASTATUS_DICT);
    errmsg("EA (%d %d %d %d) marked checked-in!", EAPROV, EADIST, EALOC, EAEA);
    P1HH   = notappl;
    P1PP   = notappl;
    P1MALE = notappl;
    P1FEM  = notappl;
    reenter P1EA;

PROC P2EA
postproc
    EAPROV = P2PROV;
    EADIST = P2DIST;
    EALOC  = P2LOC;
    EAEA   = P2EA;
    ok = loadcase(EASTATUS_DICT, EAPROV, EADIST, EALOC, EAEA);
    if ok then
        if EAP1INIT = "   " then
            errmsg("ERROR - This EA is not marked Checked-in!");
        elseif EAP2INIT = "   " then
            EAP2YEAR = visualvalue(PYEAR);
	        EAP2MON  = visualvalue(PMONTH);
	        EAP2DAY  = visualvalue(PDAY);
	        EAP2WEEK = CalcWeek(EAP2YEAR, EAP2MON, EAP2DAY);
	        EAP2INIT = op_id;
	        if EAP2DATE < EAP1DATE then
	            errmsg("ERROR - Coding occured before Check-in");
	        else
	            writecase(EASTATUS_DICT);
	            errmsg("EA (%d %d %d %d) marked Coded!", EAPROV, EADIST, EALOC, EAEA);
	        endif
	    else
	        errmsg("ERROR - This EA already marked Coded!");
	    endif;
    else
        errmsg("ERROR - Can't find this EA in database!");
    endif;
    reenter P2EA;
    
PROC P3EA
postproc
    EAPROV = P3PROV;
    EADIST = P3DIST;
    EALOC  = P3LOC;
    EAEA   = P3EA;
    ok = loadcase(EASTATUS_DICT, EAPROV, EADIST, EALOC, EAEA);
    if ok then
        if EAP1INIT = "   " then
            errmsg("ERROR - This EA is not marked Checked-in!");
        elseif EAP2INIT = "   " then
            errmsg("ERROR - This EA is not marked Coded!");
        elseif EAP3INIT = "   " then
            EAP3YEAR = visualvalue(PYEAR);
	        EAP3MON  = visualvalue(PMONTH);
	        EAP3DAY  = visualvalue(PDAY);
	        EAP3WEEK = CalcWeek(EAP3YEAR, EAP3MON, EAP3DAY);
	        EAP3INIT = op_id;
	        if EAP3DATE < EAP2DATE then
	            errmsg("ERROR - Data Entry occurred before Coding");
	        else 
		        writecase(EASTATUS_DICT);
		        errmsg("EA (%d %d %d %d) marked Entered!", EAPROV, EADIST, EALOC, EAEA);
		    endif;
	    else
	        errmsg("ERROR - This EA already marked Entered!");
	    endif;
    else
        errmsg("ERROR - Can't find this EA in database!");
    endif;
    reenter P3EA;
    
PROC RCHOICE
postproc
    { Report Menu Choices }
    if $ = "A" then
        skip to MCCHOICE;
    elseif $ = "B" then
        skip to FCCHOICE;
    elseif $ = "C" then
        skip to PCCHOICE;
    elseif $ = "D" then
        skip to MPHASE;
    elseif $ = "Q" then
        reenter CHOICE;
    endif;
    reenter;
PROC MCCHOICE
postproc
    execstr = concat(strip(cstab),' "',strip(folder));
    if $ = "A" then
        execsystem(concat(strip(execstr),'Manual Counts Province.xtb.pff"'));
    elseif $ = "B" then
        execsystem(concat(strip(execstr),'Manual Counts District.xtb.pff"'));
    elseif $ = "Q" then
        reenter RCHOICE;
    endif;
    reenter;
PROC FCCHOICE
postproc
    execstr = concat(strip(cstab),' "',strip(folder));
    if $ = "A" then
        execsystem(concat(strip(execstr),'Phase Completion Province.xtb.pff"'));
    elseif $ = "B" then
        execsystem(concat(strip(execstr),'Phase Completion District.xtb.pff"'));
    elseif $ = "Q" then
        reenter RCHOICE;
    endif;
    reenter;

PROC PCCHOICE
postproc
    execstr = concat(strip(cstab),' "',strip(folder));
    if $ = "A" then
        execsystem(concat(strip(execstr),'Productivity Daily.xtb.pff"'));
    elseif $ = "B" then
        execsystem(concat(strip(execstr),'Productivity Weekly.xtb.pff"'));
    elseif $ = "C" then
        execsystem(concat(strip(execstr),'Productivity Monthly.xtb.pff"'));
    elseif $ = "Q" then
        reenter RCHOICE;
    endif;
    reenter;

PROC MPHASE
postproc
    if MPHASE in "A","B","C" then
	elseif MPHASE = "Q" then
	    reenter RCHOICE;
	else
	    reenter;
	endif;
PROC MPROV
preproc
    set behavior() canenter(notappl) on (noconfirm);
postproc
    set behavior() canenter(notappl) off;
PROC MDIST
preproc
    set behavior() canenter(notappl) on (noconfirm);
    if MPROV = notappl then
        noinput;
    endif;
postproc
    set behavior() canenter(notappl) off;
PROC MLOC
preproc
    set behavior() canenter(notappl) on (noconfirm);
    if MDIST = notappl then
        noinput;
    endif;
postproc
    set behavior() canenter(notappl) off;
    GPROV = MPROV;
    GDIST = MDIST;
    GLOC  = MLOC;
    if loadcase(GEOFILE_DICT, GPROV, GDIST, GLOC) then
        execstr = concat(strip(cssort),' "',strip(folder));
	    execsystem(concat(strip(execstr),'SortEAStatus.ssf.pff"'), wait);
	    setfile(MEAPPP,concat(strip(folder),"Missing EAs.ppp"));
	    setfile(MEAPFF,concat(strip(folder),"Missing EAs.pff"),create);
	    filecopy(MEAPPP,MEAPFF);
	    open(MEAPFF,APPEND);
	    if MPHASE = "A" then
	    	filewrite(MEAPFF,maketext("Parameter=P1%02d%02d%03d",MPROV,MDIST,MLOC));
	    elseif MPHASE = "B" then
	    	filewrite(MEAPFF,maketext("Parameter=P2%02d%02d%03d",MPROV,MDIST,MLOC));
	    else
	    	filewrite(MEAPFF,maketext("Parameter=P3%02d%02d%03d",MPROV,MDIST,MLOC));
	    endif;
	    close(MEAPFF); 
        execstr = concat(strip(csbatch),' "',strip(folder));
	    execsystem(concat(strip(execstr),'Missing EAs.pff"'));
    else
        errmsg("ERROR - Incorrect Provice, Distict, or Village Code");
        reenter MPROV;
    endif;
    reenter MPHASE;
PROC UCHOICE
postproc
    if $ = "A" then
        execstr = concat(strip(cssort),' "',strip(folder));
	    execsystem(concat(strip(execstr),'SortEAStatus.ssf.pff"'), wait);
	    execstr = concat(strip(csbatch),' "',strip(folder));
        execsystem(concat(strip(execstr),'List EA Status File.pff"'));
    elseif $ = "B" then
        errmsg("Not Implemented Yet!");
    elseif $ = "C" then
	    execstr = concat(strip(csbatch),' "',strip(folder));
        execsystem(concat(strip(execstr),'Make AreaNames File.pff"'));
    elseif $ = "Q" then
        reenter CHOICE;
    endif;
    reenter;
