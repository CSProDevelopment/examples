{ Purpose:	Demonstrate how to maintain a hot deck.

  Keywords used:  array, while, impute

  Comments:	The program initializes the hot deck in PROC GLOBAL.
			It updates values in Proc, but does not save these values externally.
			If you wish to see an example of a program that does this, please
			see the "HotDeck2.bch" application in this same directory.
}

PROC GLOBAL

numeric loop, rowRel, cntPop;

{ The AgeDeck array's dimensions correspond to sex (2) and relationship (6).

  You can initialize the hotdeck before use in the GLOBAL section.

  When an age is missing during the data file's processing, we will use a
  value from the AgeDeck array; if the age is present, we will "refresh" the age
  for the person with the current sex and relationship codes.
}

array AgeDeck (2,6) =    //  Male   Female
						 //  (1)     (2)
							  27      32   // head of HH (1)
							  30      25   // spouse of head (2)
							   6       8   // child of head (3)
							  58      60   // parent of head (4)
							  11      10   // other relative of head (5)
							  24      28   // non-relative of head (6)
							   ;



PROC HOTDECK01

	{ the following code is not necessary, it is strictly for your info; let's
	  display the final values; notice how they've changed from what we started
	  with above! }

	loop = 1;
	
	while loop < 3 do
		errmsg("%d:", loop);
		errmsg("AgeDeck[%d,1]=%d", loop, AgeDeck (loop,1));
		errmsg("AgeDeck[%d,2]=%d", loop, AgeDeck (loop,2));
		errmsg("AgeDeck[%d,3]=%d", loop, AgeDeck (loop,3));
		errmsg("AgeDeck[%d,4]=%d", loop, AgeDeck (loop,4));
		errmsg("AgeDeck[%d,5]=%d", loop, AgeDeck (loop,5));
		errmsg("AgeDeck[%d,6]=%d", loop, AgeDeck (loop,6));
		inc(loop);
	enddo;

PROC P04_AGE

	// here, within the procedure for P04_AGE, is where the actual update of
	// the hot deck values will take place

	inc(cntPop);

	if P02_REL in 1:6 then         // Initialize a local variable 'rowRel' that will be used as a subscript to the AgeDeck array.
		rowRel = P02_REL;          // If the relationship is valid then set rowRel to the value of relationship.
	else                           // If the relationship is not valid then default to 6; Ideally, we should randomly assign values, not always use 6,
		rowRel = 6;                // but for simplicity sake, this is not done.
	endif;

	// This assumes that the sex variable has already been edited.
	
	if $ in 0:99 then // '$', when used within a procedure, means the current variable

		errmsg("Updating value for AgeDeck[%d,%d] with age=%d",P03_SEX,rowRel,$) denom = cntPop;
		AgeDeck(P03_SEX,rowRel) = $;  // this updates the hot deck with the value contained in P04_AGE
	
	else  // age is not valid, so it needs to be imputed.

		errmsg("Age(=%d) is invalid. Age variable changing from %d to %d",$,$,AgeDeck(P03_SEX,rowRel)) denom = cntPop;
		
		//impute sets the value of P04_AGE to AgeDeck(P03_SEX,rowRel)
		impute($,AgeDeck(P03_SEX,rowRel));
		
		// more testing of the P04_AGE variable should be done to ensure it is
		// legitimate, but again, for simiplicity sake, this is not being done
		
	endif;

