PROC GLOBAL

numeric person_num;       { current person occ we are working on }
numeric tot_pop;          { total number of person records }
numeric max_day;

{-- fill variables --}
string full_name_str;  { person's full name }
string month_name;     { month description (1-->January, 2-->February, etc.) }

{-- navigation control variables --}
string faq_last_field, { for use in faq blk } 
	   curr_field;     { name of current field in OnKey func }

{-- misc variables --}
numeric i;                { general calc, temp usage }



{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= 
  -   Function GetMonthStr() assigns the variable month_name, based on
  -   the month number (1-12, passed in variable m) and the currently
  -   active CAPI language.  We use
  -      CAPI_LANG=1 for English
  -      CAPI_LANG=2 for Portuguese
  -      CAPI_LANG=3 for Arabic                      
  =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=  }
function GetMonthStr(m);
    if getlanguage()="EN" then
        { interviewer is using English }
    	if m=1 then
    		month_name="January";
    	elseif m=2 then
    		month_name="February";
    	elseif m=3 then
    		month_name="March";
    	elseif m=4 then
    		month_name="April";
    	elseif m=5 then
    		month_name="May";
    	elseif m=6 then
    		month_name="June";
    	elseif m=7 then
    		month_name="July";
    	elseif m=8 then
    		month_name="August";
    	elseif m=9 then
    		month_name="September";
    	elseif m=10 then
    		month_name="October";
    	elseif m=11 then
    		month_name="November";
    	elseif m=12 then
    		month_name="December";
    	else
    		errmsg ("Internal error; m=%d", m);
    	endif;

    elseif getlanguage()="PT" then
        { interviewer is using Portuguese }
    	if m=1 then
    		month_name="janeiro";
    	elseif m=2 then
    		month_name="fevereiro";
    	elseif m=3 then
    		month_name="março";
    	elseif m=4 then
    		month_name="abril";
    	elseif m=5 then
    		month_name="maio";
    	elseif m=6 then
    		month_name="junho";
    	elseif m=7 then
    		month_name="julho";
    	elseif m=8 then
    		month_name="agosto";
    	elseif m=9 then
    		month_name="setembro";
    	elseif m=10 then
    		month_name="outubro";
    	elseif m=11 then
    		month_name="novembro";
    	elseif m=12 then
    		month_name="dezembro";
    	else
    		errmsg ("Internal error; m=%d portuguese", m);
    	endif;

    elseif getlanguage()="AR" then
        { interviewer is using Arabic }
    	if m=1 then
    		month_name="يناير";
    	elseif m=2 then
    		month_name="فبراير";
    	elseif m=3 then
    		month_name="مارس";
    	elseif m=4 then
    		month_name="أبريل/إبريل";
    	elseif m=5 then
    		month_name="مايو";
    	elseif m=6 then
    		month_name="يونيو/يونية";
    	elseif m=7 then
    		month_name="يوليو/يولية";
    	elseif m=8 then
    		month_name="أغسطس";
    	elseif m=9 then
    		month_name="سبتمبر";
    	elseif m=10 then
    		month_name="أكتوبر";
    	elseif m=11 then
    		month_name="نوفمبر";
    	elseif m=12 then
    		month_name="ديسمبر";
    	else
    		errmsg ("Internal error; m=%d  arabic", m);
    	endif;

    else
        { user has a language we don't know about -- error! }
		errmsg ("Internal error; unknown language %d", CAPI_LANG);

    endif;
end;


{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= 
  -  function OnKey()
  -  
  -  This function is executed after the user presses each keystroke, but before
  -  any procs (OnFocus or PreProc) are run.  You can use it to trap specific 
  -  keystrokes that require customized processing.
  -
  -  Here are some other keystrokes you might want to trap in the OnKey() function:
  -      Alt+F4  = 4115
  -      F1      = 112
  -      F2      = 113
  -  
  -  For more information, see the OnKey page in the CSPro helps.        
  =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=  }
function OnKey(x);
    OnKey=x;
    curr_field = getsymbol();     { current field location of cursor, i.e., the field name }

	{ write all keystrokes except for Shift/Ctrl/Alt to audit trail }
	if not (x % 1000) in 16, 17, 18 then
	    write("%4d         %s",x,concat(curr_field,maketext("(%d)",curocc())));
	endif;

    if x=4067 then  { Alt+C spawns the Windows Calculator (calc.exe) }
        execsystem("c:\windows\system32\calc.exe");
        OnKey = 0;
    elseif x = 2070 then { ctrl+f = FAQ}
    	{ set return point before jumping to FAQ section }
        OnKey = 0;
        if curr_field[1:3] <> "FAQ" then
            faq_last_field = curr_field;
            move FAQ_TOPIC_INDEX; { move them to the first form w/in FAQ block }
        endif;
    else
        OnKey=x;
    endif;
end;

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= 
  -  function OnStop()
  -  
  -  This function is executed when the user tries to stop data entry, 
  -  for example by pressing Ctrl+S, Esc, the stop button, or Alt+F4.
  -
  -  This implementation just jumps to the callback section.  A more
  -  sophisticated application might analyze the current case to see
  -  if it was complete, then take appropriate action as needed.     
  =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=  }
function OnStop();
    curr_field = getsymbol();     { current field location of cursor, i.e., the field name }
    if curr_field[1:4]="X_CB" or strip(curr_field)="CASE_NOTES" then
        { user is already somewhere on the callback screen }
        errmsg ("Please complete all callback information before exiting.");
    elseif curr_field="ALL_DONE" then
        { user is on the end interview screen ... }
        EndLevel;
        Stop(1);
    elseif curr_field="CASEID" then
        { user hasn't given IDs yet ... just quit }
        Stop(1);
    else
        { user is somewhere else in the interview ... jump to the callback form }        
        move to X_CB1;
    endif;
end;

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC POPSTAN_CENSUS_DICTIONARY_FF   { app-level proc }
preproc
    setproperty(POPSTAN_CENSUS,"CanEnterNotAppl","NoConfirm");	{ allow entry of NotAppl values }


{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC QUEST   { questionnaire proc }
PreProc
	INTERVIEW_DATE = edit("99/99/99",sysdate("DDMMYY"));
	INTERVIEW_START_TIME = edit("99:99:99",systime());


{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC FNAME  { first name }
PostProc
    if strip($) = "" then
		{ this is the last person on the roster - finished }
        FNAME = "<end>";
        skip to MORE_PEOPLE;
	endif;

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC LNAME  { last name }
PreProc
    if strip(LNAME) = "" and curocc() > 1 then
        LNAME = LNAME(curocc()-1);
    endif;

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC MORE_PEOPLE  { any more people? }
PreProc
	$ = " ";   { clear out previous response }

OnFocus
    if totocc(NAMES_ROSTER) = 1 then { is always 1+, due to storage of "<end>" }
        errmsg("You must enter the name of at least one person");
        FNAME(1)="";
        reenter FNAME(1);
    endif;

PostProc
    if not $ in "Y", "N" then
        reenter;
    endif;
    FNAME(totocc(NAMES_ROSTER))="";
    if $ = "Y" then
        reenter FNAME(totocc(NAMES_ROSTER));
    endif;


{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC PERSON_DETAILS_FORM  { detailed person info form }
PreProc
	{ total population is the number of PERSON_NAMES records with at least a first name present }
	tot_pop = count(NAMES_ROSTER where FNAME<>"" or MNAME<>"" or LNAME<>"");

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }


PROC PERSON_DETAILS_LINE  { person line number (protected; for reference only }
PreProc
	person_num = curocc();   { the current person number }
	$ = person_num;


{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC AGE
PreProc
	{ Determine the name of the person we are getting detailed information for,
	  by referencing the first name/last name from the corresponding record number in
	  the names form.  We stuff the name into the FULLNAME item (person auxiliary
	  information record), and it will then be inserted into the CAPI text %FULLNAME%
	  for this item.

	  This shows how to use a dictionary item as fill text. 	  }

	person_num = curocc();   { the current person number }
	FULLNAME = concat(strip(FNAME(person_num)), " ", strip(LNAME(person_num)));

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC REL
{ Note that this variable shows text conditionally, based on the person's 
  age.  You can see that with the View | CAPI Questions screen in the 
  forms designer.
}

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC EDUCATION_LEVEL { highest level of education }
PreProc
	if AGE<=5 then
		$ = NotAppl;
		errmsg ("Education level is not applicable for %s", FULLNAME);
		noinput;
	endif;

PostProc
	{ if we've finished gathering details for all the persons in the household, then end this form (group) }
	tot_pop = count(NAMES_ROSTER where FNAME<>"" or MNAME<>"" or LNAME<>"");
	if curocc()=tot_pop then
		{ all done, finish this roster }
		endgroup;
	endif;

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC PERSON_INCOME_FORM { income form }
PreProc
	{ total population is the number of PERSON_NAMES records with at least a first name present }
	tot_pop = count(NAMES_ROSTER where FNAME<>"" or MNAME<>"" or LNAME<>"");

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC PERSON_INCOME_LINE  { person line number (protected; for reference only }
PreProc
	person_num = curocc();   { the current person number }
	$ = person_num;

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC INC_MON1  { income for the last month }
PreProc
	{  This shows how to use a variable as fill text. 	  }
	person_num = curocc();   { the current person number }
	full_name_str = concat(strip(FNAME(person_num)), " ", strip(LNAME(person_num)));

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

OnFocus
	{ determine the name for the previous month }
	i = sysdate("MM");  { current month}
	GetMonthStr(i-1);

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC INC_MON2  { income from 2 months ago }
OnFocus
	{ determine the name for the month 2 months ago }
	i = sysdate("MM");  { current month}
	GetMonthStr(i-2);

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC INC_MON3  { income from 3 months ago }
OnFocus
	{ determine the name for the month 2 months ago }
	GetMonthStr(sysdate("MM")-3);

PostProc
	{ if we've finished gathering income information for all the persons in the household, then end this form (group) }
	tot_pop = count(NAMES_ROSTER where FNAME<>"" or MNAME<>"" or LNAME<>"");
	if curocc()=tot_pop then
		{ all done, finish this roster }
		endgroup;
	endif;

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC COMP_ENTRY  { computer equipment, driver variable }
{ This variable toggles occurrences of the COMPUTER variable }
PostProc
	if $ in 1:5 then
		if COMPUTER($) = "X" then
			COMPUTER($) = " ";
		else
			COMPUTER($) = "X";
		endif;
		reenter;
	endif;
	$ = 9;

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC ALL_DONE  { pause, inform that the interview is over }
    EndLevel;    { saves current case }
    Stop(0);     { stops add/mod/ver mode }


{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC X_CB1  { callback month }
PostProc
    if $ = "R" then
        skip to CASE_NOTES;
    endif;
    i = tonumber($);
    if i = default then
        reenter;
    endif;
    if i in 1:12 then
        $ = edit("99",i);
    else
        errmsg("Invalid month.  Value not in range 1 to 12");
        reenter;
    endif;

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC X_CB2  { callback day }
PostProc
	{ how many days in the given month? }
	max_day=30;
	
    if X_CB1 in "01","03","05","07","08","10","12" then
        max_day = 31;
    elseif X_CB1 = "02" then
        max_day = 29;
    else
        max_day = 30;
    endif;
    i = tonumber($);
    if i = default then
        reenter;
    endif;
    if i in 1:max_day then
        $ = edit("99",i);
    else
	    errmsg("Invalid day.  Value not in range 1 to %d", max_day);
	    reenter;
	endif;

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC X_CB3  { callback hour }
PostProc
	i = tonumber($);
    if i = default then
        reenter;
    endif;
    if i in 1:12 then
        $ = edit("99",i);
    else
        errmsg("Invalid hour.  Value not in range 1 to 12");
        reenter;
    endif;

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC X_CB4  { callback minute }
PostProc
    i = tonumber($);
    if i = default then
        reenter;
    endif;
    if i in 0:59 then
        $ = edit("99",i);
    else
        errmsg("Invalid minute.  Value not in range 0 to 59");
        reenter;
    endif;

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC X_CB5  { callback AM/PM }
PostProc
    if not $ in "A","P" then
	    errmsg("Value must be A or P");
	    reenter;
    endif;

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC CASE_NOTES
PreProc
	INTERVIEW_END_TIME = edit("99:99:99",systime());
	
	{ create a default notes string, and save it as the variable's note }
	PutNote(strip(maketext("Case %d: date: %s, started at: %s, ended at: %s", CASEID, INTERVIEW_DATE, INTERVIEW_START_TIME, INTERVIEW_END_TIME)));

PostProc
	if $="N" then
		EditNote();
	endif;
	SavePartial();      { save whatever we've got for this case }
	Stop(0);

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC FAQ_TOPIC_INDEX
PostProc
    if $ = "1" then
        skip to FAQ_TOPIC_1;
    elseif $ = "2" then
        skip to FAQ_TOPIC_2;
    elseif $ = "3" then
        skip to FAQ_TOPIC_3;
    elseif $ = "4" then
        skip to FAQ_TOPIC_4;
    elseif $ = "N" or $ = "n" then
        $ = " ";
        reenter faq_last_field;
    endif;
    reenter;

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC FAQ_TOPIC_1
PostProc
    reenter FAQ_TOPIC_INDEX;

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC FAQ_TOPIC_2
PostProc
    reenter FAQ_TOPIC_INDEX;

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC FAQ_TOPIC_3
PostProc
    reenter FAQ_TOPIC_INDEX;

{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }

PROC FAQ_TOPIC_4
PostProc
    reenter FAQ_TOPIC_INDEX;

