PROC GLOBAL


function syncWithHeadquarters()

	// Connect to server
	// Change the URL to match your server
	if syncconnect(CSWeb, "http://www.myserver.org/api") = 1 then

		// Sync main data file.
		// Note that HOUSEHOLDQUESTIONNAIRE_DICT must be added as
		// an external dictionary to the menu program.
		// Use PUT to do a one way sync. Only cases added/modified
		// on the tablet are sent to the server. This way cases
		// added by other teams are not downloaded to the tablet.
		syncdata(PUT, HOUSEHOLDQUESTIONNAIRE_DICT);

		// Download latest application files from the server.
		// The files are in a directory named "Synchronization in Logic"
		// on the server.
		syncfile(GET, "/Synchronization in Logic/Menu/Menu.pen",
				 "Menu.pen");
		syncfile(GET, "/Synchronization in Logic/Menu/Menu.pff",
				 "Menu.pff");

		// Since the current application is in the Menu folder we need
		// to use "../Household" to go up one level and back down into
		// Household folder for the household application files.
		syncfile(GET, "/Synchronization in Logic/Household/HouseholdQuestionnaire.pen",
				 "../Household/HouseholdQuestionnaire.pen");
		syncfile(GET, "/Synchronization in Logic/Household/HouseholdQuestionnaire.pff",
				 "../Household/HouseholdQuestionnaire.pff");

		syncdisconnect();

	endif;
end;


function syncWithSupervisor()

	// Connect to the supervisor tablet
	// We do not specify the device name to connect to
	// which allows the interviewer to pick the device
	// from a list of nearby devices.
	if syncconnect(bluetooth) = 1 then

		// Sync main data file.
		// Note that HOUSEHOLDQUESTIONNAIRE_DICT must be added as
		// an external dictionary to the menu program.
		// Both will do a two way sync so that changes that supervisor
		// makes are sent to interviewer and changes interviewer
		// makes are sent to supervisor.
		syncdata(BOTH, HOUSEHOLDQUESTIONNAIRE_DICT);

		// Download latest application files from the supervisor.
		// The root file on the supervisor tablet is the
		// "Synchronization in Logic" folder so the from
		// folder starts from there and we need to add "Menu"
		// to get to the Menu programs.
		syncfile(GET, "Menu/Menu.pen", "Menu.pen");
		syncfile(GET, "Menu/Menu.pff", "Menu.pff");

		// Since the current application is in the Menu folder we need
		// to use "../Household" to go up one level and back down into
		// Household folder for the household application files.
		syncfile(GET, "Household/HouseholdQuestionnaire.pen",
				 "../Household/HouseholdQuestionnaire.pen");
		syncfile(GET, "Household/HouseholdQuestionnaire.pff",
				 "../Household/HouseholdQuestionnaire.pff");

		syncdisconnect();
	endif;

end;


function syncWithInterviewer()

	// Run the Bluetooth server to receive data from
	// interviewer. Running the server is entirely passive.
	// The interviewers tablet will determine which files
	// to synchronize. This tablet will simply process commands
	// received from the interviewers tablet.

	// We specify ".." as the root directory to make the
	// the "Synchronization in Logic" folder be the starting
	// point for all file get/put commands instead of the
	// menu folder.
	syncserver(Bluetooth, "..");
end;


function launchDataEntry()

	string pathToEntryApp = "../Household/HouseholdQuestionnaire.pff";

	// Start household data entry
	if execpff(pathToEntryApp, stop) = notappl then
		errmsg("Failed to launch data entry");
	endif;
end;


PROC MENU_FF


PROC LOGIN

	// Go to the appropriate menu for the role chosen
	if $ = 1 then
		skip to INTERVIEWER_MENU;
	else
		skip to SUPERVISOR_MENU;
	endif;


PROC INTERVIEWER_MENU

	if $ = 1 then
		launchDataEntry();
	elseif $ = 2 then
		syncWithSupervisor();
	else
		stop(1);
	endif;

	// Clear previous entry
	$ = notappl;

	// Show interviewer menu again
	reenter;


PROC SUPERVISOR_MENU

	if $ = 1 then
		launchDataEntry();
	elseif $ = 2 then
		syncWithInterviewer();
	elseif $ = 3 then
		syncWithHeadquarters();
	else
		stop(1);
	endif;

	// Clear previous entry
	$ = notappl;

	// Show interviewer menu again
	reenter;
